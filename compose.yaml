name: desafio_anlix

services:
  mysql:
    build:
      context: mysql
      target: builder
    # image: mysql:latest
    command: mysqld --sql_mode="" --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES UTF8MB4;' --innodb-flush-log-at-trx-commit=0
    # command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - mysql-data:/var/lib/mysql
      - ./sqls_to_seed_the_db:/docker-entrypoint-initdb.d
    environment: 
      MYSQL_ROOT_PASSWORD: 123321
      MYSQL_DATABASE: desafio_anlix
    networks:
      - backnet
    ports:
    - '3306:3306'
    # restart: always
    # healthcheck:
    #   test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="123321" --silent']
    #   interval: 3s
    #   retries: 5
    #   start_period: 30s
    expose:
      - 3306
      - 33060
  frontend:
    build: 
      context: frontend
      target: builder
    ports:
      - "4200:4200"
    expose:
      - 4200
    depends_on:
      - backend
    networks:
      - frontnet
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    # command: ng serve --host 0.0.0.0 --port 4200 --poll=2000
  backend:
    build: 
      context: backend
      target: builder
    ports:
      - '8000:80'
    expose:
      - 8000
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=123321
      - MYSQL_DB=desafio_anlix
    depends_on:
      - mysql
    #     condition: service_healthy
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    networks:
      - backnet
    
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: always
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 123321
    networks:
      - backnet
  proxy:
    build: proxy
    restart: always
    ports:
      - 80:80
    depends_on: 
      - backend
      - frontend
    networks:
      - backnet
      - frontnet
    expose:
      - 80
volumes:
  mysql-data:
networks:
  frontnet:
  backnet: